# Generated by Django 2.2.4 on 2019-10-15 01:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Advance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=2048)),
                ('percentage', models.CharField(max_length=2)),
                ('period', models.CharField(max_length=200)),
                ('observation', models.TextField(max_length=2048)),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
            ],
        ),
        migrations.CreateModel(
            name='CivilState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ComentsThread',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=200, verbose_name='comment')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_file', models.FileField(upload_to=None, verbose_name='file')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('description', models.CharField(max_length=250, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HealthInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grupo_sanguineo', models.CharField(max_length=3)),
                ('rh', models.CharField(max_length=1)),
                ('eps', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cvlac', models.CharField(max_length=200)),
                ('institutional_email', models.EmailField(default='default_email@unal.edu.co', max_length=254, unique=True, verbose_name='institutional email')),
            ],
        ),
        migrations.CreateModel(
            name='InvestigationLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('description', models.CharField(max_length=250, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Nationality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
                ('origin_country', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('mobile', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institutional_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.InstitutionalInformation')),
                ('personal_information', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='academic.PersonalInformation')),
            ],
        ),
        migrations.CreateModel(
            name='ThesisState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('description', models.CharField(max_length=250, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=2048)),
                ('publication_date', models.DateTimeField(verbose_name='date publicated')),
                ('co_director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_co_director', to='academic.Teacher')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_director', to='academic.Teacher')),
                ('investigation_line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.InvestigationLine')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.ThesisState')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.Student')),
            ],
        ),
    ]
